// Generated by view binder compiler. Do not edit!
package com.example.androidfundamentals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.androidfundamentals.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CalcBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final EditText etNum1;

  @NonNull
  public final EditText etNum2;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView tvResult;

  private CalcBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAdd,
      @NonNull EditText etNum1, @NonNull EditText etNum2, @NonNull LinearLayout linearLayout,
      @NonNull TextView tvResult) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.etNum1 = etNum1;
    this.etNum2 = etNum2;
    this.linearLayout = linearLayout;
    this.tvResult = tvResult;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CalcBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CalcBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.calc, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CalcBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.etNum1;
      EditText etNum1 = ViewBindings.findChildViewById(rootView, id);
      if (etNum1 == null) {
        break missingId;
      }

      id = R.id.etNum2;
      EditText etNum2 = ViewBindings.findChildViewById(rootView, id);
      if (etNum2 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.tvResult;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      return new CalcBinding((ConstraintLayout) rootView, btnAdd, etNum1, etNum2, linearLayout,
          tvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
