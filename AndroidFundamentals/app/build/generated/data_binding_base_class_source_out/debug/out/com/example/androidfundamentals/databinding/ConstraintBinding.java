// Generated by view binder compiler. Do not edit!
package com.example.androidfundamentals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.androidfundamentals.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConstraintBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final EditText etBirthDate;

  @NonNull
  public final EditText etCountry;

  @NonNull
  public final EditText etFirstName;

  @NonNull
  public final EditText etLastName;

  @NonNull
  public final TextView textView;

  private ConstraintBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSubmit,
      @NonNull EditText etBirthDate, @NonNull EditText etCountry, @NonNull EditText etFirstName,
      @NonNull EditText etLastName, @NonNull TextView textView) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.etBirthDate = etBirthDate;
    this.etCountry = etCountry;
    this.etFirstName = etFirstName;
    this.etLastName = etLastName;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ConstraintBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConstraintBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.constraint, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConstraintBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmit;
      Button btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.etBirthDate;
      EditText etBirthDate = ViewBindings.findChildViewById(rootView, id);
      if (etBirthDate == null) {
        break missingId;
      }

      id = R.id.etCountry;
      EditText etCountry = ViewBindings.findChildViewById(rootView, id);
      if (etCountry == null) {
        break missingId;
      }

      id = R.id.etFirstName;
      EditText etFirstName = ViewBindings.findChildViewById(rootView, id);
      if (etFirstName == null) {
        break missingId;
      }

      id = R.id.etLastName;
      EditText etLastName = ViewBindings.findChildViewById(rootView, id);
      if (etLastName == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ConstraintBinding((ConstraintLayout) rootView, btnSubmit, etBirthDate, etCountry,
          etFirstName, etLastName, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
